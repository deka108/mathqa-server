# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-14 04:44
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(max_length=1)),
                ('part_content', ckeditor.fields.RichTextField()),
                ('part_respone_type', models.CharField(choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10)),
                ('subpart_name_1', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_1', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_1', models.CharField(blank=True, choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10, null=True)),
                ('subpart_name_2', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_2', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_2', models.CharField(blank=True, choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10, null=True)),
                ('subpart_name_3', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_3', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_3', models.CharField(blank=True, choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10, null=True)),
                ('subpart_name_4', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_4', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_4', models.CharField(blank=True, choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('inorder_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('sorted_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('structure_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('constant_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('variable_term', models.TextField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormulaCategory',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='FormulaIndex',
            fields=[
                ('term_index', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('docsids', models.TextField(blank=True, null=True)),
                ('df', models.PositiveIntegerField(blank=True, default=1, verbose_name='frequency')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qa', models.TextField(null=True)),
                ('imagepath', models.FileField(upload_to='/static/image/')),
            ],
        ),
        migrations.CreateModel(
            name='KeyPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keypoints', to='apiv2.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('month', models.CharField(max_length=64)),
                ('number', models.IntegerField()),
                ('no_of_question', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paperset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('question_type', models.CharField(blank=True, choices=[(b'EX', b'Exam'), (b'PR', b'Practice')], default='EX', max_length=2)),
                ('used_for', models.CharField(blank=True, choices=[(b'NO', b'No'), (b'ON', b'Online'), (b'PA', b'Papers'), (b'BO', b'Both online and papers')], default='ON', max_length=2)),
                ('marks', models.IntegerField(default=1)),
                ('difficulty_level', models.CharField(choices=[(b'1', b'Very Easy'), (b'2', b'Easy'), (b'3', b'Easy'), (b'4', b'Average'), (b'5', b'Average'), (b'6', b'Average'), (b'7', b'Difficult'), (b'8', b'Difficult'), (b'9', b'Very Difficult'), (b'10', b'Very Difficult')], default='1', max_length=2)),
                ('response_type', models.CharField(choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10)),
                ('source', models.TextField()),
                ('content', models.TextField()),
                ('content_cleaned_text', models.TextField(blank=True)),
                ('is_sample', models.BooleanField(default=False)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='apiv2.Concept')),
                ('formula_categories', models.ManyToManyField(to='apiv2.FormulaCategory')),
                ('keypoints', models.ManyToManyField(to='apiv2.KeyPoint')),
                ('keywords', models.ManyToManyField(to='apiv2.Keyword')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='apiv2.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_text', to='apiv2.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Subconcept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True)),
                ('concept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subconcepts', to='apiv2.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.EducationLevel')),
            ],
        ),
        migrations.CreateModel(
            name='TestFormula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1024)),
                ('status', models.BooleanField(default=False)),
                ('inorder_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('sorted_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('structure_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('constant_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('variable_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('questions', models.TextField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestFormulaCategory',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TestFormulaIndex',
            fields=[
                ('term_index', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('docsids', models.TextField(blank=True, null=True)),
                ('df', models.PositiveIntegerField(blank=True, default=1, verbose_name='frequency')),
            ],
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=250, null=True)),
                ('question_type', models.CharField(blank=True, choices=[(b'EX', b'Exam'), (b'PR', b'Practice')], default='EX', max_length=2)),
                ('used_for', models.CharField(blank=True, choices=[(b'NO', b'No'), (b'ON', b'Online'), (b'PA', b'Papers'), (b'BO', b'Both online and papers')], default='ON', max_length=2)),
                ('marks', models.IntegerField(default=1)),
                ('difficulty_level', models.CharField(choices=[(b'1', b'Very Easy'), (b'2', b'Easy'), (b'3', b'Easy'), (b'4', b'Average'), (b'5', b'Average'), (b'6', b'Average'), (b'7', b'Difficult'), (b'8', b'Difficult'), (b'9', b'Very Difficult'), (b'10', b'Very Difficult')], default='1', max_length=2)),
                ('response_type', models.CharField(choices=[(b'Numberic', b'Numbers'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10)),
                ('source', models.TextField()),
                ('content', models.TextField()),
                ('is_sample', models.BooleanField(default=False)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='apiv2.Concept')),
                ('keypoints', models.ManyToManyField(to='apiv2.KeyPoint')),
                ('keywords', models.ManyToManyField(to='apiv2.Keyword')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='apiv2.Paper')),
                ('subconcept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='apiv2.Subconcept')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.Subject')),
            ],
        ),
        migrations.AddField(
            model_name='testformula',
            name='categories',
            field=models.ManyToManyField(to='apiv2.TestFormulaCategory'),
        ),
        migrations.AddField(
            model_name='question',
            name='subconcept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='apiv2.Subconcept'),
        ),
        migrations.AddField(
            model_name='paperset',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papersets', to='apiv2.Subject'),
        ),
        migrations.AddField(
            model_name='paper',
            name='paperset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.Paperset'),
        ),
        migrations.AddField(
            model_name='paper',
            name='subject',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='apiv2.Subject'),
        ),
        migrations.AddField(
            model_name='image',
            name='qa_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.Question'),
        ),
        migrations.AddField(
            model_name='formula',
            name='categories',
            field=models.ManyToManyField(to='apiv2.FormulaCategory'),
        ),
        migrations.AddField(
            model_name='formula',
            name='concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apiv2.Concept'),
        ),
        migrations.AddField(
            model_name='formula',
            name='questions',
            field=models.ManyToManyField(to='apiv2.Question'),
        ),
        migrations.AddField(
            model_name='concept',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='apiv2.Topic'),
        ),
        migrations.AddField(
            model_name='answerpart',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiv2.Question'),
        ),
    ]
