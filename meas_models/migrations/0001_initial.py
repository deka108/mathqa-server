# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-18 02:08
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import meas_models.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='KeyPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.CharField(choices=[(b'1', b'January'), (b'2', b'February'), (b'3', b'March'), (b'4', b'April'), (b'5', b'May'), (b'6', b'June'), (b'7', b'July'), (b'8', b'August'), (b'9', b'September'), (b'10', b'October'), (b'11', b'November'), (b'12', b'December')], default='1', max_length=20)),
                ('number', models.IntegerField()),
                ('no_of_question', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(default=1)),
                ('difficulty_level', models.IntegerField(default=0, validators=[meas_models.models.validate_difficulty_range])),
                ('respone_type', models.CharField(choices=[(b'Numberic', b'Exam Numberic'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], default=b'Text', max_length=10)),
                ('content', ckeditor.fields.RichTextField()),
                ('solution', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[(b'EX', b'Exam'), (b'PR', b'Practice')], max_length=2)),
                ('source', models.CharField(choices=[(b'EP', b'Exam papers'), (b'OL', b'Online')], max_length=2)),
                ('used_for', models.CharField(choices=[(b'NO', b'No'), (b'ON', b'Online'), (b'PA', b'Papers'), (b'BO', b'Both online and papers')], max_length=2)),
                ('number_of_part', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)])),
                ('mark', models.IntegerField(default=1)),
                ('difficulty_level', models.CharField(choices=[(b'1', b'Very Easy'), (b'2', b'Easy'), (b'3', b'Average'), (b'4', b'Difficult'), (b'5', b'Very Difficult')], max_length=1)),
                ('respone_type', models.CharField(choices=[(b'Numberic', b'Exam Numberic'), (b'Sketch', b'Sketch'), (b'EXPRESSION', b'Expression'), (b'Text', b'Text'), (b'Prove', b'Prove')], max_length=10)),
                ('content', ckeditor.fields.RichTextField()),
                ('solution', ckeditor.fields.RichTextField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.Concept')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meas_models.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.EducationLevel')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('test_type', models.CharField(choices=[(b'PT', b'Practice Test'), (b'CT', b'Contest')], default=b'PT', max_length=200)),
                ('questions_list', models.TextField()),
                ('number_of_questions', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.Subject')),
            ],
        ),
        migrations.AddField(
            model_name='part',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.Question'),
        ),
        migrations.AddField(
            model_name='concept',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meas_models.Topic'),
        ),
    ]
